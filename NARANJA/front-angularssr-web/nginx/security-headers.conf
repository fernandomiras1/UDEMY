# force use HSTS
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
add_header Referrer-Policy "no-referrer-when-downgrade";
# config to don't allow the browser to render the page inside an frame or iframe
# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
add_header X-Frame-Options SAMEORIGIN;

# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
# to disable content-type sniffing on some browsers.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
# currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
# http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
# 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
add_header X-Content-Type-Options nosniff;
# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
# this particular website if it was disabled by the user.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-XSS-Protection "1; mode=block";

# with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# http://www.html5rocks.com/en/tutorials/security/content-security-policy/
# https://www.owasp.org/index.php/Content_Security_Policy
# I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
# directives for css and js(if you have inline css or js, you will need to keep it too).
# more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' static.ads-twitter.com *.google-analytics.com *.youtube.com *.auth0.com *.hotjar.com *.retargetly.com *.facebook.net *.twitter.com *.google.com *.googleapis.com *.googletagmanager.com *.googleadservices.com cdnjs.cloudflare.com googleads.g.doubleclick.net; connect-src 'self' *.google-analytics.com images.ctfassets.net www.googletagmanager.com *.hotjar.com *.auth0.com restcountries.eu https://placeimg.com *.awsnaranja.com; style-src 'self' 'unsafe-inline' *.google.com fonts.googleapis.com; img-src 'self' data: images.ctfassets.net *.google-analytics.com *.hotjar.com stats.g.doubleclick.net *.gstatic.com *.criteo.net *.facebook.com *.google.com *.ytimg.com *.google-analytics.com https://placeimg.com *.auth0.com; media-src 'none'; object-src 'self'; font-src 'self' static.hotjar.com fonts.gstatic.com *.auth0.com; frame-src 'self' api.retargetly.com bid.g.doubleclick.net dis.us.criteo.com gum.criteo.com tn.alfredcx.com vars.hotjar.com www.googletagmanager.com www.googletagmanager.com/ns.html *.youtube.com *.auth0.com;";
